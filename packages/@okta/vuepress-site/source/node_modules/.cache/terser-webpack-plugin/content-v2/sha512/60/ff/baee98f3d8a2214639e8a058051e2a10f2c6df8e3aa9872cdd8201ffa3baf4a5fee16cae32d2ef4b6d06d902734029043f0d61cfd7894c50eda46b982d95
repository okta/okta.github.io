{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[168],{264:function(e,t,n){\"use strict\";n.r(t);var s={props:[\"slot-key\"],mounted:function(){this.$nextTick(function(){this.$vuepress.$emit(\"AsyncMarkdownContentMounted\",this.slotKey)})}},a=n(5),o=Object(a.a)(s,function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.slotKey}},[n(\"h1\",{attrs:{id:\"event-types\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#event-types\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" Event Types\")]),e._v(\" \"),n(\"p\",[e._v(\"Event types are the primary method of categorization within the Okta eventing platform. They allow consumers to easily group notable system occurrences based on behavior. This resource contains the complete event type catalog of this platform.\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"catalog\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#catalog\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" Catalog\")]),e._v(\" \"),n(\"p\",[e._v(\"The following is a full listing of event types used in the \"),n(\"a\",{attrs:{href:\"/docs/api/resources/system_log\"}},[e._v(\"System Log API\")]),e._v(\" with associated description and related metadata. For migration purposes it also includes a mapping to the equivalent event type in the legacy \"),n(\"a\",{attrs:{href:\"/docs/api/resources/events\"}},[e._v(\"Events API\")]),e._v(\".\\nThe relationship between System Log API and Events API event types is generally one-to-many. Note that there are currently some System Log API event types which do not have an Events API equivalent.\")]),e._v(\" \"),n(\"blockquote\",[n(\"p\",[n(\"strong\",[e._v(\"Important:\")]),e._v(\" In the future the Events API will not be tracking new event types added to the System Log API. For this reason we highly recommend migrating to the System Log API.\")])]),e._v(\" \"),n(\"br\"),e._v('\\n{%- assign eventTypes = site.data.event-types.versions[1].eventTypes | sort: \"id\" -%}\\n'),n(\"input\",{attrs:{type:\"text\",id:\"event-type-search\",name:\"filter\",autocomplete:\"off\",autocorrect:\"off\",autocapitalize:\"off\",spellcheck:\"false\",placeholder:\"Search event types for...\"}}),e._v(\" \"),n(\"div\",{attrs:{id:\"event-type-count\"}},[e._v(\"Found \"),n(\"b\",[e._v(e._s(e.eventTypes.size))]),e._v(\" matches\")]),e._v(\"\\n{% for eventType in eventTypes %}\\n\"),n(\"div\",{staticClass:\"event-type\",attrs:{markdown:\"block\"}},[e._v(\"\\n{%- assign parts = eventType.id | split: '.' -%}\\n{%- capture id -%}{%- for part in parts -%}{%- if forloop.first == true -%}\"),n(\"b\",[e._v(e._s(e.part))]),e._v(\"{%- else -%}.\"+e._s(e.part)+\"{%- endif -%}{%- endfor -%}{%- endcapture -%}\\n#### \"+e._s(e.id)+\"\\n  {% if eventType.mappings.size > 0 %}\\n  \"),n(\"div\",{staticClass:\"event-type-mappings\"},[n(\"b\",[e._v(\"Legacy event types: \")]),e._v(\" \"+e._s(e._f(\"join: ', '\")(e.eventType.mappings))+\"\\n  \")]),e._v('\\n  {% endif %}\\n  {: .event-type-description }\\n  {% if eventType.description != \"\" %}\\n  '+e._s(e.eventType.description)+\"\\n  {% else %}\\n  _No description_\\n  {% endif %}\\n  \"),n(\"div\",{staticClass:\"event-type-tags\"},[e._v(\"\\n  {% for tag in eventType.tags%}\"),n(\"code\",{staticClass:\"event-type-tag\"},[e._v(e._s(e.tag))]),e._v(\"{% endfor %}\\n  \")]),e._v(\" \"),n(\"div\",{staticClass:\"event-type-release\"},[e._v(\"\\n  Since: \"),n(\"a\",{attrs:{href:\"/docs/change-log/\"}},[e._v(e._s(e.eventType.info.release))])])]),e._v(\"\\n{% endfor %}\\n\")])},[],!1,null,null,null);o.options.__file=\"index.md\";t.default=o.exports}}]);","extractedComments":[]}